{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","id","email","className","alt","src","CardList","robots","cardsArray","map","robot","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundy","state","hasError","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAeeA,MAZf,YAAoC,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,GAAIC,EAAS,EAATA,MACxB,OACE,sBAAKC,UAAU,sDAAf,UACE,qBAAKC,IAAI,SAASC,IAAG,+BAA0BJ,KAC/C,gCACE,6BAAKD,IACL,4BAAIE,WCIGI,MAVf,YAA+B,IAAXC,EAAU,EAAVA,OACZC,EAAaD,EAAOE,KAAI,SAACC,EAAOC,GAAR,OAAc,cAAC,EAAD,CAAcV,GAAIM,EAAOI,GAAGV,GAAID,KAAMO,EAAOI,GAAGX,KAAME,MAAOK,EAAOI,GAAGT,OAA5DS,MAEvD,OACE,8BACGH,KCMQI,MAZf,YAAkD,EAA7BC,YAA8B,IAAjBC,EAAgB,EAAhBA,aAChC,OACE,qBAAKX,UAAU,MAAf,SACE,uBAAOY,KAAK,SACVC,YAAY,gBACZb,UAAU,mCACVc,SAAUH,OCEHI,EARA,SAACC,GACd,OACE,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACGJ,EAAMK,YCiBEC,E,kDAnBb,WAAYN,GAAQ,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CACXC,UAAU,GAHK,E,qDAOnB,WACEC,KAAKC,SAAS,CAAEF,UAAU,M,oBAG5B,WACE,OACEC,KAAKF,MAAMC,SAAW,yDAAmCC,KAAKT,MAAMK,a,GAdhDM,aC+CXC,G,wDAzCb,aAAe,IAAD,8BACZ,gBAcFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAEhB,YAAaoB,EAAMC,OAAOC,SAd1C,EAAKT,MAAQ,CACXnB,OAAQ,GACRM,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBuB,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAAEtB,OAAQiC,S,oBAQ3C,WACE,MAAgCZ,KAAKF,MAA7BnB,EAAR,EAAQA,OAAQM,EAAhB,EAAgBA,YACV4B,EAAiBlC,EAAOmC,QAAO,SAAAhC,GACnC,OAAOA,EAAMV,KAAK2C,cAAcC,SAAS/B,EAAY8B,kBAGvD,OAAQpC,EAAOsC,OAGX,sBAAK1C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWW,aAAcc,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUzB,OAAQkC,WAP1B,gD,GA3BYX,cCKHgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a8528a6e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nfunction Card({ name, id, email }) {\r\n  return (\r\n    <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 tc'>\r\n      <img alt='robots' src={`https://robohash.org/${id}`} />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nfunction CardList({ robots }) {\r\n  const cardsArray = robots.map((robot, i) => <Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email} />)\r\n\r\n  return (\r\n    <div>\r\n      {cardsArray}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nfunction SearchBox({ searchfield, searchChange }) {\r\n  return (\r\n    <div className='pa2'>\r\n      <input type='search'\r\n        placeholder='search robots'\r\n        className='pa3 ba b--green bg-lightest-blue'\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{ overflowY: 'scroll', border: '1px solid black', height: '700px' }}>\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundy extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false\r\n    }\r\n  }\r\n\r\n  componentDidCatch() {\r\n    this.setState({ hasError: true })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      this.state.hasError ? <h1>Ooopps.That is not good</h1> : this.props.children\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default ErrorBoundy;","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundy from '../components/ErrorBoundry';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      robots: [],\n      searchfield: '',\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ robots: users }))\n\n  }\n\n  onSearchChange = (event) => {\n    this.setState({ searchfield: event.target.value })\n  }\n\n  render() {\n    const { robots, searchfield } = this.state;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n    })\n\n    return !robots.length ?\n      <h1>Loading...</h1> :\n      (\n        <div className='tc'>\n          <h1 className='f1'>RoboFriends</h1>\n          <SearchBox searchChange={this.onSearchChange} />\n          <Scroll>\n            <ErrorBoundy>\n              <CardList robots={filteredRobots} />\n            </ErrorBoundy>\n          </Scroll>\n        </ div>\n      )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}